{"ast":null,"code":"var _jsxFileName = \"/Users/girirajsinghtanwar/Documents/Projects /Bootstrap tutorial /MERN Project/client/src/components/timeline.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"../App.css\";\nimport JobCard from \"./jobcard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = props => {\n  _s();\n\n  const {\n    user\n  } = props;\n  const [jobs, setJobs] = useState([]);\n  const [screenType, setScreenType] = useState(\"SHOW\");\n  useEffect(() => {\n    if (Object.keys(user).length > 0) {\n      console.log(user._id);\n\n      const fetchJobs = async () => {\n        await Axios.get(`http://localhost:4000/job/user/${user._id}`).then(({\n          data: foundJobs\n        }) => {\n          console.info(\"All jobs were found.\");\n          console.info(foundJobs);\n          setJobs(foundJobs);\n        }).catch(error => {\n          console.log(\"Error Occurred\", error);\n        });\n      };\n\n      fetchJobs();\n    }\n  }, [user]);\n  const renderCards = jobs.map((job, index) => {\n    return /*#__PURE__*/_jsxDEV(JobCard, {\n      job: job\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"section\",\n    children: screenType === \"SHOW\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"positive ui button\",\n        style: {\n          float: \"right\",\n          margin: \"calc(2rem - .14285714em) 0 1rem\"\n        },\n        onClick: e => setScreenType(\"ADD\"),\n        children: \"Add Job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome, \", user.firstName, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui cards\",\n        children: renderCards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"positive ui button\",\n        style: {\n          float: \"right\",\n          margin: \"calc(2rem - .14285714em) 0 1rem\"\n        },\n        onClick: e => setScreenType(\"SHOW\"),\n        children: \"Show Jobs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AddJob, {\n        setJobs: setJobs,\n        jobs: jobs,\n        user: user,\n        setScreenType: setScreenType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"4TUROrld54CkyVpNNdd34uGg90Q=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/girirajsinghtanwar/Documents/Projects /Bootstrap tutorial /MERN Project/client/src/components/timeline.js"],"names":["React","useEffect","useState","JobCard","Dashboard","props","user","jobs","setJobs","screenType","setScreenType","Object","keys","length","console","log","_id","fetchJobs","Axios","get","then","data","foundJobs","info","catch","error","renderCards","map","job","index","float","margin","e","firstName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,YAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;;;;AAIA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM;AAACC,IAAAA;AAAD,MAASD,KAAf;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,MAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,MAAM,CAACC,IAAP,CAAYN,IAAZ,EAAkBO,MAAlB,GAAyB,CAA7B,EAAgC;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAYT,IAAI,CAACU,GAAjB;;AACA,YAAMC,SAAS,GAAG,YAAW;AAC3B,cAAMC,KAAK,CAACC,GAAN,CAAW,kCAAiCb,IAAI,CAACU,GAAI,EAArD,EACLI,IADK,CACA,CAAC;AAACC,UAAAA,IAAI,EAAEC;AAAP,SAAD,KAAuB;AAC5BR,UAAAA,OAAO,CAACS,IAAR,CAAa,sBAAb;AACAT,UAAAA,OAAO,CAACS,IAAR,CAAaD,SAAb;AACAd,UAAAA,OAAO,CAACc,SAAD,CAAP;AACA,SALK,EAMLE,KANK,CAMEC,KAAD,IAAU;AACfX,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BU,KAA9B;AACD,SARK,CAAN;AASD,OAVD;;AAWDR,MAAAA,SAAS;AACT;AACD,GAhBO,EAgBN,CAACX,IAAD,CAhBM,CAAT;AAkBC,QAAMoB,WAAW,GAAGnB,IAAI,CAACoB,GAAL,CAAS,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC7C,wBAAO,QAAC,OAAD;AAAS,MAAA,GAAG,EAAED;AAAd,OAAwBC,KAAxB;AAAA;AAAA;AAAA;AAAA,YAAP;AACC,GAFmB,CAApB;AAGH,sBACE;AAAK,IAAA,SAAS,EAAE,SAAhB;AAAA,cACGpB,UAAU,KAAK,MAAf,gBACC;AAAA,8BACE;AACE,QAAA,SAAS,EAAE,oBADb;AAEE,QAAA,KAAK,EAAE;AACLqB,UAAAA,KAAK,EAAE,OADF;AAELC,UAAAA,MAAM,EAAE;AAFH,SAFT;AAME,QAAA,OAAO,EAAGC,CAAD,IAAOtB,aAAa,CAAC,KAAD,CAN/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAA,gCAAcJ,IAAI,CAAC2B,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAcE;AAAK,QAAA,SAAS,EAAE,UAAhB;AAAA,kBAA6BP;AAA7B;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA,oBADD,gBAkBC;AAAA,8BACE;AACE,QAAA,SAAS,EAAE,oBADb;AAEE,QAAA,KAAK,EAAE;AACLI,UAAAA,KAAK,EAAE,OADF;AAELC,UAAAA,MAAM,EAAE;AAFH,SAFT;AAME,QAAA,OAAO,EAAGC,CAAD,IAAOtB,aAAa,CAAC,MAAD,CAN/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,MAAD;AACE,QAAA,OAAO,EAAEF,OADX;AAEE,QAAA,IAAI,EAAED,IAFR;AAGE,QAAA,IAAI,EAAED,IAHR;AAIE,QAAA,aAAa,EAAEI;AAJjB;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAnBJ;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD,CAnED;;GAAMN,S;;KAAAA,S;AAqEN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../App.css\";\nimport JobCard from \"./jobcard\";\n\n\n\nconst Dashboard = (props) => {\n    const {user} = props;\n    const [jobs, setJobs] = useState([]);\n    const [screenType, setScreenType] = useState(\"SHOW\");\n \n    useEffect(() => {\n      if (Object.keys(user).length>0) {\n        console.log(user._id);\n        const fetchJobs = async() => {\n          await Axios.get(`http://localhost:4000/job/user/${user._id}`)\n          .then(({data: foundJobs}) => {\n           console.info(\"All jobs were found.\");\n           console.info(foundJobs);\n           setJobs(foundJobs);\n          })\n          .catch((error) =>{\n            console.log(\"Error Occurred\", error);\n          });\n        };\n       fetchJobs();\n      }\n     },[user]);\n \n     const renderCards = jobs.map((job, index) => {\n     return <JobCard job={job} key={index} />;\n     });\n  return (\n    <div className={\"section\"}>\n      {screenType === \"SHOW\" ? (\n        <>\n          <button\n            className={\"positive ui button\"}\n            style={{\n              float: \"right\",\n              margin: \"calc(2rem - .14285714em) 0 1rem\",\n            }}\n            onClick={(e) => setScreenType(\"ADD\")}\n          >\n            Add Job\n          </button>\n          <h1>Welcome, {user.firstName}!</h1>\n\n          {/* Cards */}\n          <div className={\"ui cards\"}>{renderCards}</div>\n        </>\n      ):(\n        <>\n          <button\n            className={\"positive ui button\"}\n            style={{\n              float: \"right\",\n              margin: \"calc(2rem - .14285714em) 0 1rem\",\n            }}\n            onClick={(e) => setScreenType(\"SHOW\")}\n          >\n            Show Jobs\n          </button>\n          <AddJob\n            setJobs={setJobs}\n            jobs={jobs}\n            user={user}\n            setScreenType={setScreenType}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}